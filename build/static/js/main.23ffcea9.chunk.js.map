{"version":3,"sources":["enums.ts","Routes/Home/Home.tsx","Helpers/ApiCalls.ts","config.ts","Routes/Dog/Dog.tsx","Routes/ErrorBoundary/ErrorBoundary.tsx","Components/Navigation/NavigationRoutes.tsx","Components/Navigation/Desktop/DesktopMenu.tsx","Components/Navigation/Mobile/MobileMenu.tsx","Components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["FetchMethod","Home","className","ApiCalls","genericFetchCall","route","method","extras","passedParams","passedHeaders","passedBody","finalRoute","paramsUrl","join","fetchBody","headers","body","JSON","stringify","fetch","then","res","json","process","Dog","props","useState","dogsList","setDogsList","error","setError","useEffect","breedName","match","params","DogBreed","includes","split","reverse","a","config","GET","toLowerCase","dogs","status","message","getDogs","map","dog","Idx","key","src","ErrorBoundary","redirect","setRedirect","setTimeout","to","NavigationRoutes","Routes","Route","location","pathname","isMobile","onClick","setIsOpen","Heading","DesktopMenu","MobileMenu","isOpen","type","Navigation","App","path","render","routeProps","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23ffcea9.chunk.js","sourcesContent":["export enum FetchMethod {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\",\r\n}","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\n\r\nconst Home: React.FC<RouteComponentProps> = () => {\r\n  return <div className=\"Home\">\r\n    <h1>How To Use</h1>\r\n    <p>Select one of the menu options and it will take you to that route and display 3 images of that breed.</p>\r\n  </div>;\r\n};\r\n\r\nexport default Home;","interface IHeaders {\r\n  \"content-type\"?: string;\r\n  Authorization?: string;\r\n}\r\n\r\ninterface IExtras {\r\n  passedParams?: string[];\r\n  passedHeaders?: IHeaders;\r\n  passedBody?: any;\r\n}\r\n\r\nconst ApiCalls = {\r\n    genericFetchCall(route: string, method: string, extras: IExtras) {\r\n      // deconstructs extras\r\n    const { passedParams, passedHeaders, passedBody } = extras;\r\n\r\n    // inits route variable \r\n    let finalRoute = `${route}`;\r\n\r\n    // checks if params were passed if so adds them to route\r\n    if (passedParams) {\r\n      const paramsUrl = passedParams.join(\"/\");\r\n      finalRoute = `${route}/${paramsUrl}`;\r\n    }\r\n\r\n    // inits body varible\r\n    let fetchBody: any = {\r\n      method,\r\n    };\r\n\r\n    // if headers were passed then adds them to req\r\n    if (passedHeaders) {\r\n      fetchBody = {\r\n        ...fetchBody,\r\n        headers: {\r\n          ...passedHeaders,\r\n        },\r\n      };\r\n    }\r\n\r\n    // if headers were passed then adds them to body\r\n    if (passedBody) {\r\n      fetchBody = {\r\n        ...fetchBody,\r\n        body: JSON.stringify(passedBody),\r\n      };\r\n    }\r\n\r\n    // returns fetch with final data and returns json if 200 response\r\n    return fetch(`${finalRoute}`, {\r\n      ...fetchBody,\r\n    }).then((res) => res.json());\r\n  },\r\n}\r\n\r\nexport default ApiCalls;","export default {\r\n    DOGS_BREED_API_ENDPOINT: process.env.REACT_APP_DOGS_BREED_ENDPOINT\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Dog.css\";\r\nimport ApiCalls from '../../Helpers/ApiCalls'\r\nimport { FetchMethod } from \"../../enums\";\r\nimport config from '../../config';\r\nimport { IDogBreedResponse } from \"../../interfaces\";\r\n\r\nconst Dog: React.FC<any> = (props) => {\r\n  // stores the response from the api request\r\n  const [dogsList, setDogsList] = useState<null | IDogBreedResponse>(null);\r\n  const [error, setError] = useState<null | string>(null);\r\n\r\n  // runs everytime the route is changed to pull the new list of dogs\r\n  useEffect(() => {\r\n    // number of dogs you want to return\r\n    const numberOfDogs: string = '3'\r\n\r\n    // breed of the dog the user is trying to view\r\n    const breedName: string = props.match.params.DogBreed.includes('-') ? props.match.params.DogBreed.split('-').reverse().join('/') : props.match.params.DogBreed;\r\n\r\n    // api call to fetch the list of dog images\r\n    const getDogs = async () => {\r\n      // sets the state to null when pulling new list of dogs to remove old and render the loading text\r\n      setDogsList(null);\r\n\r\n      // fetch function\r\n      // params: Route<string>, FetchMethod<enum<string>>, Body<IExtras>\r\n      const dogs = await ApiCalls.genericFetchCall(`${config.DOGS_BREED_API_ENDPOINT}`, FetchMethod.GET, { passedParams: [breedName.toLowerCase(), 'images', 'random', numberOfDogs] });\r\n\r\n      // sets the response in the state if no error\r\n      if (dogs.status === 'success') {\r\n        setDogsList(dogs);\r\n      } else {\r\n        setError(dogs.message)\r\n      }\r\n    }\r\n    getDogs();\r\n  }, [props.match.params.DogBreed])\r\n\r\n  return <div className=\"Dog\">\r\n    {error ? <h3 className=\"error\">{error}</h3> :\r\n      (dogsList ? (\r\n        <>\r\n          <ul>\r\n            {/*@ts-ignore*/}\r\n            {dogsList.message.map((dog: any, Idx: number) => {\r\n              return (\r\n                <li key={`Doggo ${Idx}`}>\r\n                  <img className=\"DoggoImg\" src={`${dog}`} />\r\n                  <h2 className=\"DoggoBreed\">I'm a <span>{props.match.params.DogBreed.split('-').join(' ')}</span></h2>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </>\r\n      ) : \"Loading...\")}\r\n  </div>;\r\n};\r\n\r\nexport default Dog;","import React, { useState, useEffect } from \"react\";\r\nimport \"./ErrorBoundary.css\";\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nconst ErrorBoundary: React.FC = () => {\r\n const [redirect, setRedirect] = useState<boolean>(false);\r\n\r\nuseEffect(() => {\r\nsetTimeout(() => setRedirect(true), 4000);\r\n}, []);\r\n\r\n    return (\r\n        <div className=\"ErrorBoundary\">\r\n            <h2>Hello looks like you're lost here I'll redirect you to the home page or <Link to=\"/\">Click Me</Link>.</h2>\r\n            {redirect ? <Redirect to=\"/\" /> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ErrorBoundary;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface INavigationRoute {\r\n  Heading: string;\r\n  Route: string;\r\n}\r\n\r\nconst NavigationRoutes: React.FC<any> = (props) => {\r\n  return <ul className=\"NavigationRoutes\">\r\n    {props.Routes.map((Route: INavigationRoute, Idx: number) => {\r\n      if (\r\n        Route.Route.toLowerCase() ===\r\n        props.location.pathname.toLowerCase()\r\n      ) {\r\n        return <li key={`${props.isMobile ? 'Mobile' : 'Desktop'} Navigation Route Home`}>\r\n          <Link onClick={props.setIsOpen} to={'/'}>Home</Link>\r\n        </li>\r\n      } else {\r\n        return (<li key={`${props.isMobile ? 'Mobile' : 'Desktop'} Navigation Route ${Idx}`}>\r\n          <Link onClick={props.setIsOpen} to={Route.Route}>{Route.Heading}</Link>\r\n        </li>)\r\n      }\r\n    })}\r\n  </ul>;\r\n};\r\n\r\nexport default NavigationRoutes;","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./DesktopMenu.css\";\r\nimport NavigationRoutes from '../NavigationRoutes'\r\n\r\nconst DesktopMenu: React.FC<any> = (props) => {\r\n  return <div className=\"DesktopMenu\">\r\n    <NavigationRoutes isMobile={false} {...props} />\r\n  </div>;\r\n};\r\n\r\nexport default DesktopMenu;","import React, { useState } from \"react\";\r\nimport \"./MobileMenu.css\";\r\nimport NavigationRoutes from '../NavigationRoutes';\r\n\r\nconst MobileMenu: React.FC<any> = (props) => {\r\n  // used to toggle mobile menu\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  return <div className={`MobileMenu ${isOpen ? 'open animate__animated animate__slideInDown' : 'closed'}`}>\r\n    {isOpen ? <NavigationRoutes isMobile={true} {...props} setIsOpen={() => setIsOpen(!isOpen)} /> : null}\r\n    <button type='button' onClick={() => setIsOpen(!isOpen)}>\r\n      <i className={`${isOpen ? \"fas fa-caret-up\" : \"fas fa-caret-down\"}`}></i>\r\n    </button>\r\n  </div>;\r\n};\r\n\r\nexport default MobileMenu;\r\n","import React from 'react';\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { DesktopMenu, MobileMenu } from '../';\r\n\r\nconst Navigation: React.FC<RouteComponentProps> = (props) => {\r\n\r\n  const Routes = [{ Heading: 'Beagle', Route: '/Beagle' },\r\n  { Heading: 'Boxer', Route: '/Boxer' },\r\n  { Heading: 'Great Dane', Route: '/Great-Dane' },\r\n  { Heading: 'Doberman', Route: '/Doberman' },\r\n  { Heading: 'Malinois', Route: '/Malinois' },\r\n  { Heading: 'Pitbull', Route: '/Pitbull' },\r\n  ]\r\n\r\n  return <nav className=\"Navigation\">\r\n    <MobileMenu {...props} Routes={Routes} />\r\n    <DesktopMenu {...props} Routes={Routes} />\r\n  </nav>;\r\n};\r\n\r\nexport default Navigation;","import React, { FunctionComponent } from \"react\";\nimport \"./App.css\";\nimport { RouteComponentProps, Switch, Route } from \"react-router-dom\";\nimport { Home, Dog, ErrorBoundary } from './Routes/';\nimport { Navigation } from './Components'\n\nconst App: FunctionComponent = () => {\n\n  return <div className=\"App\">\n    <Route path=\"/\" render={(routeProps: RouteComponentProps) => <Navigation {...routeProps} />} />\n    <main>\n      <Switch>\n        <Route exact path='/' render={(routeProps: RouteComponentProps) => <Home {...routeProps} />} />\n        <Route exact path='/:DogBreed' render={(routeProps: RouteComponentProps) => <Dog {...routeProps} />} />\n        <ErrorBoundary />\n      </Switch>\n    </main>\n  </div>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}